#lang racket

;; Reverse the order of items in a list.
(define (reverse lst)
  (error "TBD"))

;; Should return '(4 3 2 1)
(reverse '(1 2 3 4))



;; Join two lists together by adding their elements.
;; If one list is longer than the other, add the
;; additional elements to the end of the list.
(define (add-two-lists lst1 lst2)
  (error "TBD"))

;; Should return '(10 2 5 5 5)
(add-two-lists '(1 2 3 4 5) '(9 0 2 1 0))

;; Should return '(8 6 1)
(add-two-lists '(5 4) '(3 2 1))

;; Should return '(15 17 18 16)
(add-two-lists '(13 14 15 16) '(2 3 3))



;; Return the list with only positive number included.
(define (positive-nums-only lst)
  (error "TBD"))

(positive-nums-only '(1 2 -4 90 -4))
